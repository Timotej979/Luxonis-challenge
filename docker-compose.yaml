version: '3.9'

services:

  # API service
  api:
    image: "scraper-api:v1"
    restart: unless-stopped

    command: sh -c "poetry run python /app/api_web.py"

    build:
      context: ./backend

    depends_on:
      db:
        condition: service_started

    networks:
      - backend

    environment:
      - APP_CONFIG=${APP_CONFIG}
      - API_URL_PREFIX=${API_URL_PREFIX}
      - API_DB_CONNECTION_STRING=postgresql+psycopg2://${APP_DB_USERNAME}:${APP_DB_PASSWORD}@db:5432/${APP_DB_DBNAME}
      - API_DB_MAX_CONNECTIONS=${API_DB_MAX_CONNECTIONS}
      - API_DB_POOL_RECYCLE=${API_DB_POOL_RECYCLE}
      - API_DB_MAX_OVERFLOW=${API_DB_MAX_OVERFLOW}
      - API_DB_POOL_TIMEOUT=${API_DB_POOL_TIMEOUT}
  

  # Database service
  db:
    image: postgres:15.6
    restart: unless-stopped

    networks:
      - backend

    environment:
      - POSTGRES_PASSWORD=${APP_DB_PASSWORD} 
      - POSTGRES_USER=${APP_DB_USERNAME}
      - POSTGRES_DB=${APP_DB_DBNAME} 

    # Comment out ports here if you do not want outside DB access
    ports:
      - ${APP_DB_OUT_PORT}:5432


  # Reverse proxy service
  nginx:
    image: "scraper-nginx:v1"
    restart: unless-stopped

    command: sh -c "nginx -g 'daemon off;'"

    build:
      context: ./nginx

    ports:
      - ${APP_NGINX_OUT_PORT}:8000

    networks:
      - backend

    depends_on:
      api:
        condition: service_started
      db:
        condition: service_started

networks:
  backend:
    driver: bridge