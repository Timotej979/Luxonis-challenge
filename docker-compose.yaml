services:

  # API service
  api:
    image: "scraper-api:v1"
    restart: unless-stopped
    command: sh -c "poetry run python /app/api_web.py"
    build:
      context: ./backend
      args:
      - APP_PYTHON_VERSION
      - APP_POETRY_VERSION
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
    environment:
      - APP_CONFIG
      - API_URL_PREFIX
      - API_DB_CONNECTION_STRING=postgresql+psycopg2://${APP_DB_USERNAME}:${APP_DB_PASSWORD}@db:5432/${APP_DB_DBNAME}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/scraper-api/v1/healthz"]
      interval: 20s
      timeout: 10s
      retries: 5
  
  # Database service
  db:
    image: postgres:15.6
    restart: unless-stopped
    networks:
      - backend
    environment:
      - POSTGRES_PASSWORD=${APP_DB_PASSWORD} 
      - POSTGRES_USER=${APP_DB_USERNAME}
      - POSTGRES_DB=${APP_DB_DBNAME} 
    # Comment out ports here if you do not want outside DB access
    ports:
      - ${APP_DB_OUT_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${APP_DB_USERNAME} -d ${APP_DB_DBNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Reverse proxy service
  nginx:
    image: "scraper-nginx:v1"
    restart: unless-stopped
    command: sh -c "nginx -g 'daemon off;'"
    build:
      context: ./nginx
    ports:
      - ${APP_NGINX_OUT_PORT}:8000
    networks:
      - backend
    depends_on:
      api:
        condition: service_healthy
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/scraper-api/v1/healthz"]
      interval: 20s
      timeout: 10s
      retries: 5

networks:
  backend: